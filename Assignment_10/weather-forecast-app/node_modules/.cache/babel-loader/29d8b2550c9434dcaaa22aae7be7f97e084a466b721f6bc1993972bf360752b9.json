{"ast":null,"code":"var _jsxFileName = \"/Users/deepakkumar/Documents/Documents/canvas -1/WebDesign/INFO-6150-Assignment10/Weather-forecast-App/my-app/src/WeatherData.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar moment = require(\"moment\");\nfunction WeatherData(props) {\n  let _date = new Date();\n  const weekday = props.reading.dt * 1000;\n  _date.setTime(weekday);\n  const _img = `owf owf-${props.reading.weather[0].id} owf-5x`;\n  const fahrenheitMax = props.reading.main.temp_max;\n  const fahrenheitMin = props.reading.main.temp_min;\n  const farenheitTemp = props.reading.main.temp;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: {\n          pathname: `/${props.reading.day}`,\n          state: {\n            completeData: props.completeData,\n            cityName: props.cityName\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card py-2 mt-3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: _img\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: props.reading.weather[0].description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"text-secondary\",\n                children: [moment(_date).format(\"MMMM D YYYY\"), \"--\", props.reading.day]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Temp: \", farenheitTemp, \"\\xB0F || Min: \", fahrenheitMin, \"\\xB0F || Max: \", fahrenheitMax, \"\\xB0F\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n_c = WeatherData;\nexport default _c2 = withRouter(WeatherData);\nvar _c, _c2;\n$RefreshReg$(_c, \"WeatherData\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","Link","withRouter","moment","require","WeatherData","props","_date","Date","weekday","reading","dt","setTime","_img","weather","id","fahrenheitMax","main","temp_max","fahrenheitMin","temp_min","farenheitTemp","temp","pathname","day","state","completeData","cityName","description","format"],"sources":["/Users/deepakkumar/Documents/Documents/canvas -1/WebDesign/INFO-6150-Assignment10/Weather-forecast-App/my-app/src/WeatherData.js"],"sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nvar moment = require(\"moment\");\r\n\r\nfunction WeatherData(props) {\r\n    let _date = new Date();\r\n    const weekday = props.reading.dt * 1000;\r\n    _date.setTime(weekday);\r\n    const _img = `owf owf-${props.reading.weather[0].id} owf-5x`;\r\n    const fahrenheitMax = props.reading.main.temp_max;\r\n\r\n    const fahrenheitMin = props.reading.main.temp_min;\r\n\r\n    const farenheitTemp = props.reading.main.temp;\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-12\">\r\n                <Link\r\n                    to={{\r\n                        pathname: `/${props.reading.day}`,\r\n                        state: {\r\n                            completeData: props.completeData,\r\n                            cityName: props.cityName,\r\n                        },\r\n                    }}\r\n                >\r\n                    <div className=\"card py-2 mt-3\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                <i className={_img}></i>\r\n                                <p>{props.reading.weather[0].description}</p>\r\n                                <h4 className=\"text-secondary\">\r\n                                    {moment(_date).format(\"MMMM D YYYY\")}\r\n                                    --{props.reading.day}\r\n                                </h4>\r\n                                <p>Temp: {farenheitTemp}°F || Min: {fahrenheitMin}°F || Max: {fahrenheitMax}°F</p>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(WeatherData);\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,UAAU,QAAQ,kBAAkB;AAAC;AAE9C,IAAIC,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAE9B,SAASC,WAAW,CAACC,KAAK,EAAE;EACxB,IAAIC,KAAK,GAAG,IAAIC,IAAI,EAAE;EACtB,MAAMC,OAAO,GAAGH,KAAK,CAACI,OAAO,CAACC,EAAE,GAAG,IAAI;EACvCJ,KAAK,CAACK,OAAO,CAACH,OAAO,CAAC;EACtB,MAAMI,IAAI,GAAI,WAAUP,KAAK,CAACI,OAAO,CAACI,OAAO,CAAC,CAAC,CAAC,CAACC,EAAG,SAAQ;EAC5D,MAAMC,aAAa,GAAGV,KAAK,CAACI,OAAO,CAACO,IAAI,CAACC,QAAQ;EAEjD,MAAMC,aAAa,GAAGb,KAAK,CAACI,OAAO,CAACO,IAAI,CAACG,QAAQ;EAEjD,MAAMC,aAAa,GAAGf,KAAK,CAACI,OAAO,CAACO,IAAI,CAACK,IAAI;EAE7C,oBACI;IAAK,SAAS,EAAC,KAAK;IAAA,uBAChB;MAAK,SAAS,EAAC,QAAQ;MAAA,uBACnB,QAAC,IAAI;QACD,EAAE,EAAE;UACAC,QAAQ,EAAG,IAAGjB,KAAK,CAACI,OAAO,CAACc,GAAI,EAAC;UACjCC,KAAK,EAAE;YACHC,YAAY,EAAEpB,KAAK,CAACoB,YAAY;YAChCC,QAAQ,EAAErB,KAAK,CAACqB;UACpB;QACJ,CAAE;QAAA,uBAEF;UAAK,SAAS,EAAC,gBAAgB;UAAA,uBAC3B;YAAK,SAAS,EAAC,KAAK;YAAA,uBAChB;cAAK,SAAS,EAAC,KAAK;cAAA,wBAChB;gBAAG,SAAS,EAAEd;cAAK;gBAAA;gBAAA;gBAAA;cAAA,QAAK,eACxB;gBAAA,UAAIP,KAAK,CAACI,OAAO,CAACI,OAAO,CAAC,CAAC,CAAC,CAACc;cAAW;gBAAA;gBAAA;gBAAA;cAAA,QAAK,eAC7C;gBAAI,SAAS,EAAC,gBAAgB;gBAAA,WACzBzB,MAAM,CAACI,KAAK,CAAC,CAACsB,MAAM,CAAC,aAAa,CAAC,QACjCvB,KAAK,CAACI,OAAO,CAACc,GAAG;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QACnB,eACL;gBAAA,qBAAUH,aAAa,oBAAaF,aAAa,oBAAaH,aAAa;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAAO;YAAA;cAAA;cAAA;cAAA;YAAA;UAEhF;YAAA;YAAA;YAAA;UAAA;QACJ;UAAA;UAAA;UAAA;QAAA;MACJ;QAAA;QAAA;QAAA;MAAA;IACH;MAAA;MAAA;MAAA;IAAA;EACL;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd;AAAC,KAzCQX,WAAW;AA2CpB,qBAAeH,UAAU,CAACG,WAAW,CAAC;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}