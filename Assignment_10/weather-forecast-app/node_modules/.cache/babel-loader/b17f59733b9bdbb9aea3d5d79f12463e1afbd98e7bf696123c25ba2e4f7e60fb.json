{"ast":null,"code":"var _jsxFileName = \"/Users/deepakkumar/Documents/NU_Sem_1/INFO6150/Assignment_10/Weather-forecast-App/my-app/src/WeatherContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport WeatherData from \"./WeatherData\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar moment = require(\"moment\");\nfunction WeatherContainer() {\n  _s();\n  const [completeData, setCompleteData] = useState([]);\n  const [dailyData, setDailyData] = useState(JSON.parse(localStorage.getItem(\"data\")) || []);\n  const [cityName, setCityName] = useState(\"\");\n  const [hasError, setHasError] = useState(false);\n  useEffect(() => {\n    setDailyData(JSON.parse(localStorage.getItem(\"data\")) || []);\n    if (dailyData.length <= 0) refreshData();\n  }, []);\n  let display;\n  if (completeData.length > 0 || hasError == false) {\n    display = displayData();\n  }\n  function changeText(event) {\n    setCityName(event.target.value);\n  }\n  function displayData() {\n    return dailyData.map((reading, index) => /*#__PURE__*/_jsxDEV(WeatherData, {\n      reading: reading,\n      completeData: completeData,\n      cityName: cityName\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this));\n  }\n  function refreshData() {\n    const _url = `http://api.openweathermap.org/data/2.5/forecast?q=${cityName}&APPID=3981c77803578cc809ae7fa0836c638e`;\n    fetch(_url).then(res => res.json()).then(data => {\n      const _data = data.list.filter(reading => reading.dt_txt.includes(\"00:00:00\"));\n      data.list.map(function (name) {\n        let _date = new Date();\n        const weekday = name.dt * 1000;\n        _date.setTime(weekday);\n        name.day = moment(_date).format(\"dddd\");\n      });\n      setCompleteData(data.list);\n      setHasError(false);\n      setDailyData(_data);\n      localStorage.setItem(\"data\", JSON.stringify(_data));\n      setDailyData(JSON.parse(localStorage.getItem(\"data\")) || []);\n    }).catch(err => {\n      setCompleteData([]);\n      setHasError(true);\n      setDailyData([]);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Weather Forecast  APP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\" \", cityName, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"city-name\",\n        label: \"Enter City:\",\n        value: cityName,\n        onChange: changeText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), \"     \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        id: \"buttons\",\n        className: \"btn btn-warning mt-3\",\n        value: \"SUBMIT\",\n        onClick: refreshData,\n        disabled: cityName == 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: display\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n_s(WeatherContainer, \"bxDPMYiQp/O+wea7kXTI8NkAqrA=\");\n_c = WeatherContainer;\nexport default WeatherContainer;\nvar _c;\n$RefreshReg$(_c, \"WeatherContainer\");","map":{"version":3,"names":["React","useState","useEffect","WeatherData","TextField","moment","require","WeatherContainer","completeData","setCompleteData","dailyData","setDailyData","JSON","parse","localStorage","getItem","cityName","setCityName","hasError","setHasError","length","refreshData","display","displayData","changeText","event","target","value","map","reading","index","_url","fetch","then","res","json","data","_data","list","filter","dt_txt","includes","name","_date","Date","weekday","dt","setTime","day","format","setItem","stringify","catch","err"],"sources":["/Users/deepakkumar/Documents/NU_Sem_1/INFO6150/Assignment_10/Weather-forecast-App/my-app/src/WeatherContainer.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport WeatherData from \"./WeatherData\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nvar moment = require(\"moment\");\r\n\r\nfunction WeatherContainer() {\r\n    const [completeData, setCompleteData] = useState([]);\r\n    const [dailyData, setDailyData] = useState(\r\n        JSON.parse(localStorage.getItem(\"data\")) || []\r\n    );\r\n    const [cityName, setCityName] = useState(\"\");\r\n    const [hasError, setHasError] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setDailyData(JSON.parse(localStorage.getItem(\"data\")) || []);\r\n        if (dailyData.length <= 0) refreshData();\r\n    }, []);\r\n\r\n    let display;\r\n    if (completeData.length > 0 || hasError == false) {\r\n        display = displayData();\r\n    }\r\n    function changeText(event) {\r\n        setCityName(event.target.value);\r\n    }\r\n\r\n    function displayData() {\r\n        return dailyData.map((reading, index) => (\r\n            <WeatherData\r\n                reading={reading}\r\n                key={index}\r\n                completeData={completeData}\r\n                cityName={cityName}\r\n            />\r\n        ));\r\n    }\r\n    function refreshData() {\r\n        const _url = `http://api.openweathermap.org/data/2.5/forecast?q=${cityName}&APPID=3981c77803578cc809ae7fa0836c638e`;\r\n        fetch(_url)\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                const _data = data.list.filter((reading) =>\r\n                    reading.dt_txt.includes(\"00:00:00\")\r\n                );\r\n                data.list.map(function (name) {\r\n                    let _date = new Date();\r\n                    const weekday = name.dt * 1000;\r\n                    _date.setTime(weekday);\r\n                    name.day = moment(_date).format(\"dddd\");\r\n                });\r\n\r\n                setCompleteData(data.list);\r\n                setHasError(false);\r\n                setDailyData(_data);\r\n                localStorage.setItem(\"data\", JSON.stringify(_data));\r\n                setDailyData(JSON.parse(localStorage.getItem(\"data\")) || []);\r\n            })\r\n            .catch((err) => {\r\n                setCompleteData([]);\r\n                setHasError(true);\r\n                setDailyData([]);\r\n            });\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <h1> Weather Forecast  APP</h1>\r\n            <h2> {cityName} </h2>\r\n            <br />\r\n            <br />\r\n            <div>\r\n                <TextField\r\n                    id=\"city-name\"\r\n                    label=\"Enter City:\"\r\n                    value={cityName}\r\n                    onChange={changeText}\r\n                />\r\n                {\"     \"}\r\n                <input\r\n                    type=\"button\"\r\n                    id=\"buttons\"\r\n                    className=\"btn btn-warning mt-3\"\r\n                    value=\"SUBMIT\"\r\n                    onClick={refreshData}\r\n                    disabled={cityName == 0}\r\n                />\r\n            </div>\r\n            <br />\r\n            <br />\r\n\r\n            <br />\r\n\r\n            <div>{display}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WeatherContainer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}